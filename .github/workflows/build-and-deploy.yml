name: Java CI

on:
  push:
    branches:
      - "**"
      - "!main"
      - "!release-*"
  pull_request:
    types:
      - closed
    branches:
      - "main"
      - "release-*"
      
jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      new_release_published: ${{ steps.release.outputs.new_release_published }}
      new_release_version: ${{ steps.release.outputs.new_release_version }}
      matrix: ${{ steps.setmatrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Build with Maven
        run: |
          echo "Build with maven"
      
      - name: Debug
        run: |
          echo "github.event_name ${{github.event_name}}"
          echo "github.event.pull_request.merged ${{github.event.pull_request.merged}}"
          echo "github.event.pull_request.base.ref ${{github.event.pull_request.base.ref}}"
          echo "github.head_ref ${{github.head_ref}}"
          echo "github.base_ref ${{github.base_ref}}"
          echo "github.ref ${{github.ref}}"

      
      - name: Release
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' }}
        id: release
        # from https://github.com/cycjimmy/semantic-release-action/commits/main
        uses: cycjimmy/semantic-release-action@bdd914ff2423e2792c73475f11e8da603182f32d
        with:
          semantic_version: 18.0.0
          extra_plugins: |
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Dynamic Env Matrix
        id: setmatrix
        run: |
          if [ ${{ steps.release.outputs.new_release_published == 'true' }} == true ]; then 
            matrixStringifiedObject="{\"include\":[{\"environment\":\"prod\", \"env_short\": \"p\"}]}"
          elif [ ${{ github.event.pull_request.base.ref == 'release-uat' }} == true ]; then
            matrixStringifiedObject="{\"include\":[{\"environment\":\"uat\", \"env_short\": \"u\"}]}"
          else
            matrixStringifiedObject=""
          fi
          
          echo "matrix=$matrixStringifiedObject" >> $GITHUB_OUTPUT
      
  deploy:
    name: "Deploy"
    if: ${{ needs.build.outputs.matrix != '' }}
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
        matrix: ${{ fromJson(needs.build.outputs.matrix) }}

    continue-on-error: false
    environment: ${{ matrix.environment }}
    env:
      AWS_REGION: eu-south-1      
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      
      - name: Build image
        id: build-image
        
        run: |
          echo "Run docker build."
      
      - name: Deploy ${{ matrix.environment }}
        id: deploy-image
        
        run: |
          echo "Run deploy."    
